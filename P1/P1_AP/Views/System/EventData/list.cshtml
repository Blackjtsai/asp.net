@using Newtonsoft.Json;
@using P1_Core;
@using System;
@model IEnumerable<chapter>;
@{
  ViewData["Title"] = "ChapterList";
  @* 取新增刪除修改狀態資料 *@
  string resMsg = Convert.ToString(TempData["ExcuteStatus"]);

  @* 取列表資料 方法一：DeserializeObject*@
  @* List<chapter> ChapterData = JsonConvert.DeserializeObject<List<chapter>>(Context.Session.GetString("ChapterData"));
    //使用session*@

  @* 取列表資料 方法二：Model*@
  List<chapter> ChapterData = Model.ToList();

  @* 取列表資料 方法三 使用 ajax 取資料 *@
}
<section id="app-list">
  @* 功能列 *@
  <div class="btn-group">
    <a
      href="#"
      class="btn btn-primary active"
      aria-current="page"
    >Chapter</a>
    <a
      class="btn btn-primary"
      href="/System/Chapter/List"
    >列表</a>
    <a
      class="btn btn-primary"
      href="/System/Chapter/Detail?act=add"
    >新增</a>
  </div>

  @* 顯示執行狀態資料 *@
  @{
    if (resMsg != "" && resMsg != null)
    {
      <div class="row m-2"></div>
      <div
      class="alert alert-warning alert-dismissible fade show"
      role="alert"
    >
        <strong>@resMsg</strong>
        <button
        type="button"
        class="btn-close"
        data-bs-dismiss="alert"
        aria-label="Close"
      ></button>
      </div>
    }
  }
  @*  列表 *@
  <table class="table table-striped table-hover">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">章節</th>
        <th scope="col">連結 </th>
        <th scope="col">排序</th>
        <th scope="col">狀態</th>
        <th scope="col">內容</th>
      </tr>
    </thead>
    <tbody>
      <tr
        v-for="(item,index) in now_listdata"
        v-if=" this.now_listdata.length > 0 "
        v-on:click="gotoDetail(item.chapter_id)"
      >
        <th scope="row">{{item.chapter_id }}</th>
        <td>{{item.chapter_name}}</td>
        <td>{{item.chapter_url}}</td>
        <td>{{item.seq}}</td>
        <td>{{item.status}}</td>
        <td>{{item.note}}</td>
      </tr>
    </tbody>
  </table>
</section>

@section scripts{

<script>
  $(document).ready(function () {
    @* let a = '@Html.Raw(JsonConvert.SerializeObject(ChapterData))';
        console.log(a); *@
      @* --- *@
      });

  //  listVue
  ListVue = Vue.createApp({
    data() {
      return {
        listdata: []
      }
    },
    mounted() {
      // 取List
      let that = this;
      @* $.getJSON("/System/Chapter/getDataByAjax", '',
          function (result) {
          that.listdata = result.reverse();// 反序列
          }); *@
        let a = '@Html.Raw(JsonConvert.SerializeObject(ChapterData))';
      that.listdata = JSON.parse(a);
    },
    computed: {
      now_listdata() {
        return this.listdata;
      }
    },
    methods: {
      gotoDetail(chapter_id) {
        let url = "/System/Chapter/Detail?act=note&chapter_id=" + chapter_id;
        window.location.href = url;
      },
    }
  }).mount('#app-list');
</script>

}
